{"remainingRequest":"/home/baron/Documents/projects/Client/youdecide_vue/node_modules/babel-loader/lib/index.js!/home/baron/Documents/projects/Client/youdecide_vue/node_modules/eslint-loader/index.js??ref--13-0!/home/baron/Documents/projects/Client/youdecide_vue/src/store/modules/UserAuthentication.js","dependencies":[{"path":"/home/baron/Documents/projects/Client/youdecide_vue/src/store/modules/UserAuthentication.js","mtime":1586654074817},{"path":"/home/baron/Documents/projects/Client/youdecide_vue/node_modules/cache-loader/dist/cjs.js","mtime":1586229982811},{"path":"/home/baron/Documents/projects/Client/youdecide_vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/baron/Documents/projects/Client/youdecide_vue/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"/home/baron/Documents/projects/Client/youdecide_vue/node_modules/@babel/runtime/helpers/builtin/es6/objectSpread\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/baron/Documents/projects/Client/youdecide_vue/node_modules/@babel/runtime/helpers/builtin/es6/asyncToGenerator\";\nimport axios from \"axios\";\nimport { apiBaseUrl } from \"../baseUrl\";\nvar state = {\n  user: {},\n  error: [],\n  status: \"\",\n  token: localStorage.getItem(\"token\") || \"\"\n};\nvar getters = {\n  isLoggedIn: function isLoggedIn(state) {\n    return !!state.token;\n  },\n  authStatus: function authStatus(state) {\n    return state.status;\n  },\n  user: function user(state) {\n    return state.user;\n  }\n};\nvar actions = {\n  login: function login(_ref, user) {\n    var commit = _ref.commit;\n    return new Promise(function (resolve, reject) {\n      commit(\"auth_request\");\n      axios({\n        url: \"\".concat(apiBaseUrl.baseRoute, \"/users/login\"),\n        data: user,\n        method: \"POST\"\n      }).then(function (response) {\n        var token = response.data.token; // const user = response.data.user;\n\n        localStorage.setItem(\"token\", token); // localStorage.setItem(\"user\", user);\n\n        axios.defaults.headers.common[\"Authorization\"] = token;\n        commit(\"auth_success\", {\n          token: token,\n          user: user\n        });\n        resolve(response);\n      }).catch(function (err) {\n        commit(\"auth_error\"); // localStorage.removeItem(\"token\");\n\n        reject(err);\n      });\n    });\n  },\n  logout: function logout(_ref2) {\n    var commit = _ref2.commit;\n    return new Promise(function (resolve) {\n      commit(\"logout\");\n      localStorage.removeItem(\"token\");\n      delete axios.defaults.headers.common[\"Authorization\"];\n      resolve();\n    });\n  },\n  // This action is used to send a post request to the backend API to register a new user\n  register: function () {\n    var _register = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee(_ref3, payload) {\n      var commit, _ref4, response;\n\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref3.commit;\n              _context.next = 3;\n              return axios({\n                url: \"\".concat(apiBaseUrl.baseRoute, \"/users/signup/\"),\n                data: payload,\n                method: \"POST\"\n              });\n\n            case 3:\n              _ref4 = _context.sent;\n              response = _ref4.response;\n\n              if (response === 201) {\n                commit(\"REGISTER_USER\", response);\n              } else {\n                commit(\"AUTH_ERROE\");\n              }\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    return function register(_x, _x2) {\n      return _register.apply(this, arguments);\n    };\n  }(),\n  getUsers: function getUsers(_ref5) {\n    var commit = _ref5.commit;\n    commit(\"fetch_users\");\n  }\n};\nvar mutations = {\n  REGISTER_USER: function REGISTER_USER(state, response) {\n    var token = response.token,\n        user = response.user;\n    state.token = token, state.user = _objectSpread({}, user);\n  },\n  auth_request: function auth_request(state) {\n    state.status = \"loading\";\n  },\n  auth_success: function auth_success(state, payload) {\n    var token = payload.token,\n        user = payload.user;\n    state.status = \"success\";\n    state.token = token;\n    state.user = _objectSpread({}, user);\n  },\n  auth_error: function auth_error(state, payload) {\n    var data = payload.data;\n    state.status = \"error\";\n    state.isLoading = false;\n    state.error = data;\n  },\n  logout: function logout(state) {\n    state.status = \"\";\n    state.token = \"\";\n  },\n  fetch_users: function fetch_users(state, users) {\n    state.users = users;\n  }\n};\nexport default {\n  state: state,\n  getters: getters,\n  actions: actions,\n  mutations: mutations\n};",{"version":3,"sources":["/home/baron/Documents/projects/Client/youdecide_vue/src/store/modules/UserAuthentication.js"],"names":["axios","apiBaseUrl","state","user","error","status","token","localStorage","getItem","getters","isLoggedIn","authStatus","actions","login","commit","Promise","resolve","reject","url","baseRoute","data","method","then","response","setItem","defaults","headers","common","catch","err","logout","removeItem","register","payload","getUsers","mutations","REGISTER_USER","auth_request","auth_success","auth_error","isLoading","fetch_users","users"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,YAA3B;AAEA,IAAMC,QAAQ;AACbC,QAAM,EADO;AAEbC,SAAO,EAFM;AAGbC,UAAQ,EAHK;AAIbC,SAAOC,aAAaC,OAAb,CAAqB,OAArB,KAAiC;AAJ3B,CAAd;AAOA,IAAMC,UAAU;AACfC,cAAY;AAAA,WAAS,CAAC,CAACR,MAAMI,KAAjB;AAAA,GADG;AAEfK,cAAY;AAAA,WAAST,MAAMG,MAAf;AAAA,GAFG;AAGfF,QAAM;AAAA,WAASD,MAAMC,IAAf;AAAA;AAHS,CAAhB;AAMA,IAAMS,UAAU;AACfC,OADe,uBACGV,IADH,EACS;AAAA,QAAhBW,MAAgB,QAAhBA,MAAgB;AACvB,WAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACvCH,aAAO,cAAP;AACAd,YAAM;AACLkB,uBAAQjB,WAAWkB,SAAnB,iBADK;AAELC,cAAMjB,IAFD;AAGLkB,gBAAQ;AAHH,OAAN,EAKEC,IALF,CAKO,oBAAY;AACjB,YAAMhB,QAAQiB,SAASH,IAAT,CAAcd,KAA5B,CADiB,CAEjB;;AACAC,qBAAaiB,OAAb,CAAqB,OAArB,EAA8BlB,KAA9B,EAHiB,CAIjB;;AACAN,cAAMyB,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAiDrB,KAAjD;AACAQ,eAAO,cAAP,EAAuB;AAAER,sBAAF;AAASH;AAAT,SAAvB;AACAa,gBAAQO,QAAR;AACA,OAbF,EAcEK,KAdF,CAcQ,eAAO;AACbd,eAAO,YAAP,EADa,CAEb;;AACAG,eAAOY,GAAP;AACA,OAlBF;AAmBA,KArBM,CAAP;AAsBA,GAxBc;AA0BfC,QA1Be,yBA0BI;AAAA,QAAVhB,MAAU,SAAVA,MAAU;AAClB,WAAO,IAAIC,OAAJ,CAAY,mBAAW;AAC7BD,aAAO,QAAP;AACAP,mBAAawB,UAAb,CAAwB,OAAxB;AACA,aAAO/B,MAAMyB,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,CAAP;AACAX;AACA,KALM,CAAP;AAMA,GAjCc;AAmCf;AACAgB;AAAA;AAAA;AAAA,4BAAU,wBAAmBC,OAAnB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAASnB,oBAAT,SAASA,MAAT;AAAA;AAAA,qBACgBd,MAAM;AAC9BkB,+BAAQjB,WAAWkB,SAAnB,mBAD8B;AAE9BC,sBAAMa,OAFwB;AAG9BZ,wBAAQ;AAHsB,eAAN,CADhB;;AAAA;AAAA;AACHE,sBADG,SACHA,QADG;;AAMT,kBAAIA,aAAa,GAAjB,EAAsB;AACrBT,uBAAO,eAAP,EAAwBS,QAAxB;AACA,eAFD,MAEO;AACNT,uBAAO,YAAP;AACA;;AAVQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAV;;AAAA;AAAA;AAAA;AAAA,KApCe;AAgDfoB,UAhDe,2BAgDM;AAAA,QAAVpB,MAAU,SAAVA,MAAU;AACpBA,WAAO,aAAP;AACA;AAlDc,CAAhB;AAqDA,IAAMqB,YAAY;AACjBC,eADiB,yBACHlC,KADG,EACIqB,QADJ,EACc;AAAA,QACtBjB,KADsB,GACNiB,QADM,CACtBjB,KADsB;AAAA,QACfH,IADe,GACNoB,QADM,CACfpB,IADe;AAE7BD,UAAMI,KAAN,GAAcA,KAAf,EAAwBJ,MAAMC,IAAN,qBAAkBA,IAAlB,CAAxB;AACA,GAJgB;AAKjBkC,cALiB,wBAKJnC,KALI,EAKG;AACnBA,UAAMG,MAAN,GAAe,SAAf;AACA,GAPgB;AAQjBiC,cARiB,wBAQJpC,KARI,EAQG+B,OARH,EAQY;AAAA,QACpB3B,KADoB,GACJ2B,OADI,CACpB3B,KADoB;AAAA,QACbH,IADa,GACJ8B,OADI,CACb9B,IADa;AAE5BD,UAAMG,MAAN,GAAe,SAAf;AACAH,UAAMI,KAAN,GAAcA,KAAd;AACAJ,UAAMC,IAAN,qBAAkBA,IAAlB;AACA,GAbgB;AAcjBoC,YAdiB,sBAcNrC,KAdM,EAcC+B,OAdD,EAcU;AAAA,QAClBb,IADkB,GACTa,OADS,CAClBb,IADkB;AAE1BlB,UAAMG,MAAN,GAAe,OAAf;AACAH,UAAMsC,SAAN,GAAkB,KAAlB;AACAtC,UAAME,KAAN,GAAcgB,IAAd;AACA,GAnBgB;AAoBjBU,QApBiB,kBAoBV5B,KApBU,EAoBH;AACbA,UAAMG,MAAN,GAAe,EAAf;AACAH,UAAMI,KAAN,GAAc,EAAd;AACA,GAvBgB;AAwBjBmC,aAxBiB,uBAwBLvC,KAxBK,EAwBEwC,KAxBF,EAwBS;AACzBxC,UAAMwC,KAAN,GAAcA,KAAd;AACA;AA1BgB,CAAlB;AA6BA,eAAe;AACdxC,cADc;AAEdO,kBAFc;AAGdG,kBAHc;AAIduB;AAJc,CAAf","sourcesContent":["import axios from \"axios\";\nimport { apiBaseUrl } from \"../baseUrl\";\n\nconst state = {\n\tuser: {},\n\terror: [],\n\tstatus: \"\",\n\ttoken: localStorage.getItem(\"token\") || \"\"\n};\n\nconst getters = {\n\tisLoggedIn: state => !!state.token,\n\tauthStatus: state => state.status,\n\tuser: state => state.user\n};\n\nconst actions = {\n\tlogin({ commit }, user) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tcommit(\"auth_request\");\n\t\t\taxios({\n\t\t\t\turl: `${apiBaseUrl.baseRoute}/users/login`,\n\t\t\t\tdata: user,\n\t\t\t\tmethod: \"POST\"\n\t\t\t})\n\t\t\t\t.then(response => {\n\t\t\t\t\tconst token = response.data.token;\n\t\t\t\t\t// const user = response.data.user;\n\t\t\t\t\tlocalStorage.setItem(\"token\", token);\n\t\t\t\t\t// localStorage.setItem(\"user\", user);\n\t\t\t\t\taxios.defaults.headers.common[\"Authorization\"] = token;\n\t\t\t\t\tcommit(\"auth_success\", { token, user });\n\t\t\t\t\tresolve(response);\n\t\t\t\t})\n\t\t\t\t.catch(err => {\n\t\t\t\t\tcommit(\"auth_error\");\n\t\t\t\t\t// localStorage.removeItem(\"token\");\n\t\t\t\t\treject(err);\n\t\t\t\t});\n\t\t});\n\t},\n\n\tlogout({ commit }) {\n\t\treturn new Promise(resolve => {\n\t\t\tcommit(\"logout\");\n\t\t\tlocalStorage.removeItem(\"token\");\n\t\t\tdelete axios.defaults.headers.common[\"Authorization\"];\n\t\t\tresolve();\n\t\t});\n\t},\n\n\t// This action is used to send a post request to the backend API to register a new user\n\tregister: async ({ commit }, payload) => {\n\t\tlet { response } = await axios({\n\t\t\turl: `${apiBaseUrl.baseRoute}/users/signup/`,\n\t\t\tdata: payload,\n\t\t\tmethod: \"POST\"\n\t\t});\n\t\tif (response === 201) {\n\t\t\tcommit(\"REGISTER_USER\", response);\n\t\t} else {\n\t\t\tcommit(\"AUTH_ERROE\");\n\t\t}\n\t},\n\tgetUsers({ commit }) {\n\t\tcommit(\"fetch_users\");\n\t}\n};\n\nconst mutations = {\n\tREGISTER_USER(state, response) {\n\t\tconst { token, user } = response;\n\t\t(state.token = token), (state.user = { ...user });\n\t},\n\tauth_request(state) {\n\t\tstate.status = \"loading\";\n\t},\n\tauth_success(state, payload) {\n\t\tconst { token, user } = payload;\n\t\tstate.status = \"success\";\n\t\tstate.token = token;\n\t\tstate.user = { ...user };\n\t},\n\tauth_error(state, payload) {\n\t\tconst { data } = payload;\n\t\tstate.status = \"error\";\n\t\tstate.isLoading = false;\n\t\tstate.error = data;\n\t},\n\tlogout(state) {\n\t\tstate.status = \"\";\n\t\tstate.token = \"\";\n\t},\n\tfetch_users(state, users) {\n\t\tstate.users = users;\n\t}\n};\n\nexport default {\n\tstate,\n\tgetters,\n\tactions,\n\tmutations\n};\n"]}]}